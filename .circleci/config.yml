version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.6.3-stretch-node
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: postgres
      PGPASSWORD: ""
      RAILS_ENV: test
      DISABLE_SPRING: true bin/rails test
  postgres: &postgres
    image: circleci/postgres:9.5-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: keiba_sns_app_test
      POSTGRES_PASSWORD: ""

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - keiba-sns-app-{{ checksum "Gemfile.lock" }}
            - keiba-sns-app-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: keiba-sns-app-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  test:
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - keiba-sns-app-{{ checksum "Gemfile.lock" }}
            - keiba-sns-app-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:migrate:reset
      - run:
          name: Execute test
          command: bundle exec rails test
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    docker:
      - *default_docker_ruby_executor
    steps:
      - restore_cache:
        keys:
          - keiba-sns-app-{{ checksum "Gemfile.lock" }}
          - keiba-sns-app-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - add_ssh_keys:
          fingerprints:
            - "62:63:13:2e:f6:22:78:1a:a4:99:8b:d0:a7:5a:9e:e3"
      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap --trace production deploy

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
